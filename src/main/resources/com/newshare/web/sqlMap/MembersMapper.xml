<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="members">
	<!-- db의 컬럼명과 vo의 property가 일치하지 않을때 resultMap을 선언 -->
	<resultMap type="members" id="membersResultMap">
		<result column="birthdate" property="birthDate" />
		<result column="politicsints" property="politicsInts" />
		<result column="economyints" property="economyInts" />
		<result column="societyints" property="societyInts" />
		<result column="lifecultureints" property="lifeCultureInts" />
		<result column="worldints" property="worldInts" />
		<result column="itscienceints" property="itScienceInts" />
		<result column="entertainmentints" property="entertainmentInts" />
		<result column="sportsints" property="sportsInts" />
	</resultMap>

	<!-- 회원 가입 -->
	<insert id="insertMember" parameterType="members">
		insert into members values
		(#{email} , #{password} , #{name}, #{birthDate},#{politicsInts} ,
		#{economyInts} , #{societyInts} , #{lifeCultureInts} , #{worldInts} ,
		#{itScienceInts} , #{entertainmentInts} , #{sportsInts})
	</insert>
	
	<!-- 회원 id 중복여부 체크 -->
	<select id="idCheck" parameterType="String" resultType="String">
		select email
		from members 
		where email= #{email}
	</select>
	
	<!-- 로그인 -->
	<select id="loginMember" parameterType="members" resultMap="membersResultMap">
		select *
		from members
		where email = #{email} and password = #{password} 
	</select>

	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="members">
		update members
		set password = #{password} , name = #{name} , birthdate = #{birthDate} ,
		politicsints = #{politicsInts} , economyints = #{economyInts} ,
		societyints = #{societyInts} , lifecultureints = #{lifeCultureInts} ,
		worldints = #{worldInts} , itscienceints = #{itScienceInts} ,
		entertainmentints = #{entertainmentInts} , sportsints = #{sportsInts}
		where email = #{email}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="deleteMember" parameterType="members">
		delete from members
		where email = #{email} and password = #{password}
	</delete>
	
	<!-- 비밀번호찾기(이메일서비스) -->
	<select id="searchPassword" parameterType="members" resultMap="membersResultMap">
		select *
		from members
		where email = #{email} and name = #{name} and birthdate = #{birthDate}
	</select>
	
	<!-- 사용자 이름 갖고오기 -->
	<select id="userName" parameterType="String" resultType="String">
		select name
		from members
		where email = #{email} 
	</select>
</mapper>
